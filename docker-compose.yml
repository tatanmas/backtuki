version: '3.8'

services:
  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  web:
    build:
      context: .
      target: base
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app/
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - ./.env
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - REDIS_URL=redis://redis:6379/0

  celery:
    build:
      context: .
      target: base
    command: celery -A config worker -l INFO
    volumes:
      - .:/app/
    depends_on:
      - db
      - redis
    env_file:
      - ./.env
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - REDIS_URL=redis://redis:6379/0

  celery-beat:
    build:
      context: .
      target: base
    command: celery -A config beat -l INFO
    volumes:
      - .:/app/
    depends_on:
      - db
      - redis
      - celery
    env_file:
      - ./.env
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - REDIS_URL=redis://redis:6379/0

volumes:
  postgres_data:
  redis_data: 