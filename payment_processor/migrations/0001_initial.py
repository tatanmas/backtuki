# Generated by Django 4.2.8 on 2025-08-20 20:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('events', '0019_remove_legacy_event_field'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentProvider',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('provider_type', models.CharField(choices=[('transbank_webpay_plus', 'Transbank WebPay Plus'), ('transbank_oneclick', 'Transbank Oneclick'), ('mercadopago', 'MercadoPago'), ('stripe', 'Stripe'), ('paypal', 'PayPal')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_sandbox', models.BooleanField(default=True)),
                ('config', models.JSONField(default=dict, help_text='Provider-specific configuration')),
                ('min_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('max_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('supported_currencies', models.JSONField(default=list, help_text="['CLP', 'USD']")),
                ('priority', models.IntegerField(default=0, help_text='Higher priority = preferred provider')),
                ('timeout_seconds', models.IntegerField(default=30)),
                ('retry_attempts', models.IntegerField(default=3)),
            ],
            options={
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('method_type', models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('bank_transfer', 'Bank Transfer'), ('wallet', 'Digital Wallet'), ('saved_card', 'Saved Card (Oneclick)')], max_length=50)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_registration', models.BooleanField(default=False)),
                ('icon_url', models.URLField(blank=True)),
                ('display_order', models.IntegerField(default=0)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to='payment_processor.paymentprovider')),
            ],
            options={
                'ordering': ['display_order', 'display_name'],
                'unique_together': {('provider', 'method_type')},
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='CLP', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('authorized', 'Authorized'), ('captured', 'Captured'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', max_length=20)),
                ('external_id', models.CharField(blank=True, help_text="Provider's transaction ID", max_length=255)),
                ('token', models.CharField(blank=True, help_text='Transbank token', max_length=255)),
                ('buy_order', models.CharField(help_text='Unique buy order', max_length=26, unique=True)),
                ('authorized_at', models.DateTimeField(blank=True, null=True)),
                ('captured_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional provider-specific data')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='events.order')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='payment_processor.paymentmethod')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SavedCard',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(help_text='Oneclick username', max_length=100)),
                ('tbk_user', models.CharField(help_text='Transbank user token', max_length=100)),
                ('card_type', models.CharField(blank=True, max_length=50)),
                ('last_four_digits', models.CharField(blank=True, max_length=4)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('card_metadata', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_cards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'tbk_user')},
            },
        ),
        migrations.CreateModel(
            name='PaymentWebhook',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(max_length=100)),
                ('webhook_id', models.CharField(max_length=255, unique=True)),
                ('headers', models.JSONField(default=dict)),
                ('payload', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('received', 'Received'), ('processing', 'Processing'), ('processed', 'Processed'), ('failed', 'Failed'), ('ignored', 'Ignored')], default='received', max_length=20)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='payment_processor.payment')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payment_processor.paymentprovider')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['webhook_id'], name='payment_pro_webhook_1615ad_idx'), models.Index(fields=['status', 'created_at'], name='payment_pro_status_4539a4_idx')],
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('create', 'Create Payment'), ('authorize', 'Authorize'), ('capture', 'Capture'), ('refund', 'Refund'), ('cancel', 'Cancel'), ('webhook', 'Webhook Received'), ('status_check', 'Status Check')], max_length=20)),
                ('request_data', models.JSONField(default=dict)),
                ('response_data', models.JSONField(default=dict)),
                ('is_successful', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('duration_ms', models.IntegerField(help_text='Request duration in milliseconds', null=True)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='payment_processor.payment')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['payment', 'created_at'], name='payment_pro_payment_0747af_idx'), models.Index(fields=['transaction_type', 'created_at'], name='payment_pro_transac_133ba1_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status', 'created_at'], name='payment_pro_status_d767cd_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['buy_order'], name='payment_pro_buy_ord_79eee0_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['external_id'], name='payment_pro_externa_129742_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['token'], name='payment_pro_token_5c4dc0_idx'),
        ),
    ]
