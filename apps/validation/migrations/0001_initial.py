# Generated by Django 4.2.8 on 2025-10-05 20:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0029_allow_null_available_in_ticket_tier'),
        ('organizers', '0011_add_temporary_fields'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ValidatorSession',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('validator_name', models.CharField(help_text='Nombre del validador asignado', max_length=100)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('device_info', models.JSONField(default=dict, help_text='Información del dispositivo (browser, OS, etc.)')),
                ('location', models.JSONField(default=dict, help_text='Ubicación GPS si está disponible')),
                ('total_scans', models.IntegerField(default=0)),
                ('successful_validations', models.IntegerField(default=0)),
                ('failed_validations', models.IntegerField(default=0)),
                ('tickets_checked_in', models.IntegerField(default=0)),
                ('average_scan_time_ms', models.FloatField(default=0.0)),
                ('total_validation_time_ms', models.BigIntegerField(default=0)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validator_sessions', to='events.event')),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validator_sessions', to='organizers.organizer')),
                ('user', models.ForeignKey(help_text='Usuario que inició la sesión', on_delete=django.db.models.deletion.CASCADE, related_name='validator_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sesión de Validador',
                'verbose_name_plural': 'Sesiones de Validadores',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='TicketNote',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('note_type', models.CharField(choices=[('general', 'Nota General'), ('check_in', 'Nota de Check-in'), ('issue', 'Incidencia'), ('resolution', 'Resolución'), ('security', 'Seguridad'), ('vip', 'VIP/Especial')], default='general', max_length=20)),
                ('title', models.CharField(blank=True, help_text='Título opcional para la nota', max_length=200)),
                ('content', models.TextField(help_text='Contenido de la nota')),
                ('is_important', models.BooleanField(default=False, help_text='Marcar como importante')),
                ('is_resolved', models.BooleanField(default=False, help_text='Marcar como resuelto')),
                ('attachments', models.JSONField(default=list, help_text='URLs de archivos adjuntos')),
                ('metadata', models.JSONField(default=dict, help_text='Metadatos adicionales')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validation_notes', to='events.ticket')),
                ('user', models.ForeignKey(help_text='Usuario que creó la nota', on_delete=django.db.models.deletion.CASCADE, related_name='validation_notes_created', to=settings.AUTH_USER_MODEL)),
                ('validator_session', models.ForeignKey(blank=True, help_text='Sesión de validador cuando se creó la nota', null=True, on_delete=django.db.models.deletion.SET_NULL, to='validation.validatorsession')),
            ],
            options={
                'verbose_name': 'Nota de Ticket',
                'verbose_name_plural': 'Notas de Tickets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventValidationStats',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_tickets', models.IntegerField(default=0)),
                ('tickets_scanned', models.IntegerField(default=0)),
                ('tickets_validated', models.IntegerField(default=0)),
                ('tickets_checked_in', models.IntegerField(default=0)),
                ('tickets_rejected', models.IntegerField(default=0)),
                ('first_scan_time', models.DateTimeField(blank=True, null=True)),
                ('last_scan_time', models.DateTimeField(blank=True, null=True)),
                ('average_scan_time_ms', models.FloatField(default=0.0)),
                ('peak_throughput_per_minute', models.IntegerField(default=0)),
                ('active_validators', models.IntegerField(default=0)),
                ('total_validator_sessions', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='validation_stats', to='events.event')),
            ],
            options={
                'verbose_name': 'Estadísticas de Validación',
                'verbose_name_plural': 'Estadísticas de Validación',
            },
        ),
        migrations.CreateModel(
            name='TicketValidationLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('scan', 'Escaneo QR'), ('validate', 'Validación'), ('check_in', 'Check-in'), ('status_change', 'Cambio de Estado'), ('note_added', 'Nota Agregada'), ('manual_override', 'Override Manual')], max_length=20)),
                ('status', models.CharField(choices=[('success', 'Exitoso'), ('error', 'Error'), ('warning', 'Advertencia'), ('info', 'Información')], max_length=10)),
                ('message', models.TextField(help_text='Descripción detallada de la acción')),
                ('scan_time_ms', models.IntegerField(blank=True, help_text='Tiempo de escaneo en milisegundos', null=True)),
                ('qr_data', models.TextField(blank=True, help_text='Datos completos del QR escaneado')),
                ('device_location', models.JSONField(default=dict, help_text='Ubicación GPS del dispositivo al momento de la acción')),
                ('metadata', models.JSONField(default=dict, help_text='Datos adicionales específicos de la acción')),
                ('error_code', models.CharField(blank=True, help_text='Código de error específico', max_length=50)),
                ('error_details', models.JSONField(default=dict, help_text='Detalles técnicos del error')),
                ('ticket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='validation_logs', to='events.ticket')),
                ('validator_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validation_logs', to='validation.validatorsession')),
            ],
            options={
                'verbose_name': 'Log de Validación',
                'verbose_name_plural': 'Logs de Validación',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['validator_session', '-created_at'], name='validation__validat_e456ee_idx'), models.Index(fields=['ticket', '-created_at'], name='validation__ticket__e148a1_idx'), models.Index(fields=['action', 'status'], name='validation__action_a663c9_idx')],
            },
        ),
    ]
