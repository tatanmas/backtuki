# Generated by Django 4.2.8 on 2025-08-18 17:22

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('organizers', '0009_alter_organizer_organizer_id'),
        ('events', '0012_event_is_free_event_pricing_mode_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='ticketcategory',
            name='requires_approval',
            field=models.BooleanField(default=False, help_text='Whether tickets in this category require organizer approval before purchase/access', verbose_name='requires approval'),
        ),
        migrations.AddField(
            model_name='tickettier',
            name='requires_approval',
            field=models.BooleanField(default=False, help_text='Whether this ticket type requires organizer approval before purchase/access', verbose_name='requires approval'),
        ),
        migrations.CreateModel(
            name='TicketRequest',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='quantity')),
                ('first_name', models.CharField(max_length=100, verbose_name='first name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone')),
                ('message', models.TextField(blank=True, help_text='Optional message from requester', verbose_name='message')),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved - Can Purchase'), ('rejected', 'Rejected'), ('purchased', 'Purchased'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='status')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='reviewed at')),
                ('review_notes', models.TextField(blank=True, verbose_name='review notes')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_requests', to='events.event', verbose_name='event')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket_requests', to='events.order', verbose_name='order')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_ticket_requests', to='organizers.organizeruser', verbose_name='reviewed by')),
                ('simple_booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket_requests', to='events.simplebooking', verbose_name='simple booking')),
                ('ticket_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_requests', to='events.ticketcategory', verbose_name='ticket category')),
                ('ticket_tier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_requests', to='events.tickettier', verbose_name='ticket tier')),
            ],
            options={
                'verbose_name': 'ticket request',
                'verbose_name_plural': 'ticket requests',
                'ordering': ['-created_at'],
                'unique_together': {('event', 'email', 'ticket_tier')},
            },
        ),
    ]
