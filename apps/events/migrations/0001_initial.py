# Generated by Django 4.2.8 on 2025-04-30 20:08

import core.utils
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizers', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('tenant_id', models.CharField(db_index=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('description', models.TextField(verbose_name='description')),
                ('short_description', models.CharField(max_length=255, verbose_name='short description')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('canceled', 'Canceled'), ('finished', 'Finished')], default='draft', max_length=20, verbose_name='status')),
                ('type', models.CharField(choices=[('concert', 'Concert'), ('conference', 'Conference'), ('festival', 'Festival'), ('party', 'Party'), ('sport', 'Sport'), ('theater', 'Theater'), ('workshop', 'Workshop'), ('other', 'Other')], default='other', max_length=20, verbose_name='type')),
                ('start_date', models.DateTimeField(verbose_name='start date')),
                ('end_date', models.DateTimeField(verbose_name='end date')),
                ('featured', models.BooleanField(default=False, verbose_name='featured')),
                ('tags', models.CharField(blank=True, max_length=255, verbose_name='tags')),
                ('age_restriction', models.CharField(blank=True, max_length=50, verbose_name='age restriction')),
                ('dresscode', models.CharField(blank=True, max_length=100, verbose_name='dress code')),
                ('accessibility', models.TextField(blank=True, verbose_name='accessibility')),
                ('parking', models.TextField(blank=True, verbose_name='parking')),
                ('max_tickets_per_purchase', models.PositiveIntegerField(default=10, verbose_name='max tickets per purchase')),
                ('ticket_sales_start', models.DateTimeField(blank=True, null=True, verbose_name='ticket sales start')),
                ('ticket_sales_end', models.DateTimeField(blank=True, null=True, verbose_name='ticket sales end')),
            ],
            options={
                'verbose_name': 'event',
                'verbose_name_plural': 'events',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('tenant_id', models.CharField(db_index=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('icon', models.ImageField(blank=True, null=True, upload_to=core.utils.get_upload_path, verbose_name='icon')),
            ],
            options={
                'verbose_name': 'event category',
                'verbose_name_plural': 'event categories',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('tenant_id', models.CharField(db_index=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('address', models.CharField(max_length=255, verbose_name='address')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('country', models.CharField(max_length=100, verbose_name='country')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='longitude')),
                ('venue_details', models.TextField(blank=True, verbose_name='venue details')),
                ('capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='capacity')),
            ],
            options={
                'verbose_name': 'location',
                'verbose_name_plural': 'locations',
            },
        ),
        migrations.CreateModel(
            name='TicketTier',
            fields=[
                ('tenant_id', models.CharField(db_index=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('type', models.CharField(choices=[('general', 'General'), ('vip', 'VIP'), ('early-bird', 'Early Bird'), ('group', 'Group'), ('student', 'Student'), ('child', 'Child'), ('senior', 'Senior'), ('other', 'Other')], default='general', max_length=20, verbose_name='type')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='price')),
                ('service_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='service fee')),
                ('currency', models.CharField(default='CLP', max_length=3, verbose_name='currency')),
                ('capacity', models.PositiveIntegerField(verbose_name='capacity')),
                ('available', models.PositiveIntegerField(verbose_name='available')),
                ('is_public', models.BooleanField(default=True, verbose_name='is public')),
                ('max_per_order', models.PositiveIntegerField(default=10, verbose_name='max per order')),
                ('min_per_order', models.PositiveIntegerField(default=1, verbose_name='min per order')),
                ('benefits', models.TextField(blank=True, verbose_name='benefits')),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='original price')),
                ('is_early_bird', models.BooleanField(default=False, verbose_name='is early bird')),
                ('early_bird_deadline', models.DateTimeField(blank=True, null=True, verbose_name='early bird deadline')),
                ('is_highlighted', models.BooleanField(default=False, verbose_name='is highlighted')),
                ('is_waitlist', models.BooleanField(default=False, verbose_name='is waitlist')),
                ('category', models.CharField(blank=True, max_length=100, verbose_name='category')),
                ('category_description', models.CharField(blank=True, max_length=255, verbose_name='category description')),
                ('image', models.ImageField(blank=True, null=True, upload_to=core.utils.get_upload_path, verbose_name='image')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_tiers', to='events.event', verbose_name='event')),
            ],
            options={
                'verbose_name': 'ticket tier',
                'verbose_name_plural': 'ticket tiers',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='EventImage',
            fields=[
                ('tenant_id', models.CharField(db_index=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to=core.utils.get_upload_path, verbose_name='image')),
                ('alt', models.CharField(blank=True, max_length=255, verbose_name='alt text')),
                ('type', models.CharField(choices=[('image', 'Image'), ('banner', 'Banner'), ('thumbnail', 'Thumbnail'), ('gallery', 'Gallery')], default='image', max_length=20, verbose_name='type')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='events.event', verbose_name='event')),
            ],
            options={
                'verbose_name': 'event image',
                'verbose_name_plural': 'event images',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='event',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='events.eventcategory', verbose_name='category'),
        ),
        migrations.AddField(
            model_name='event',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='events.location', verbose_name='location'),
        ),
        migrations.AddField(
            model_name='event',
            name='organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='organizers.organizer', verbose_name='organizer'),
        ),
    ]
